{"version":3,"file":"js/app.58b9af37.js","mappings":"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","sources":["webpack://visualization/./src/App.vue","webpack://visualization/./src/App.vue?7ccd","webpack://visualization/./src/components/DSLevel.vue","webpack://visualization/./src/components/DSLevel.vue?0ab9","webpack://visualization/./src/components/MSLevel.vue","webpack://visualization/./src/components/MSLevel.vue?2dce","webpack://visualization/./src/components/PPLevel.vue","webpack://visualization/./src/components/PPLevel.vue?57eb","webpack://visualization/./src/components/SSLevel.vue","webpack://visualization/./src/components/SSLevel.vue?fad6","webpack://visualization/./src/components/DSMS.vue","webpack://visualization/./src/components/DSMS.vue?2ed9","webpack://visualization/./src/router/index.js","webpack://visualization/./src/store/index.js","webpack://visualization/./src/main.js","webpack://visualization/webpack/bootstrap","webpack://visualization/webpack/runtime/chunk loaded","webpack://visualization/webpack/runtime/compat get default export","webpack://visualization/webpack/runtime/define property getters","webpack://visualization/webpack/runtime/global","webpack://visualization/webpack/runtime/hasOwnProperty shorthand","webpack://visualization/webpack/runtime/jsonp chunk loading","webpack://visualization/webpack/startup"],"sourcesContent":["<template>\r\n    <nav>\r\n        <router-link to=\"/Distributing Station\">Distributing Station</router-link> |\r\n        <router-link to=\"/Measuring Station\">Measuring Station</router-link> |\r\n        <router-link to=\"/Pick-and-Place Station\">Pick-and-Place Station</router-link> |\r\n        <router-link to=\"/Sorting Station\">Sorting Station</router-link> |\r\n        <router-link to=\"/DSMS\">Distributing Station - Measuring Station</router-link>\r\n    </nav>\r\n    <router-view />\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n#app {\r\n    font-family: Avenir, Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n}\r\n\r\nnav {\r\n    padding: 30px;\r\n\r\n    a {\r\n        font-weight: bold;\r\n        color: #2c3e50;\r\n\r\n        &.router-link-exact-active {\r\n            color: #42b983;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./App.vue?vue&type=template&id=53ff54f9\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&id=53ff54f9&lang=scss\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'visComponent',\r\n    data() {\r\n        return {\r\n            graphData: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 1800,\r\n            nodeRadius: 16,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await fetch(\"./assets/ds.json\"); // 使用实际的JSON文件路径\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            this.graphData = await response.json();\r\n            this.renderChart();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.graphData) {\r\n                console.log(\"data ok!\")\r\n                const margin = 120;\r\n                const links = this.graphData.links.map(d => ({ ...d }));\r\n                const nodes = this.graphData.nodes.map(d => ({ ...d }));\r\n                const spacing = 120;\r\n                const cnt=0.2;\r\n                //计算页面高度\r\n                // const maxCnt = Math.max(nodes.filter(node => node.group === 1).length, nodes.filter(node => node.group === 2).length)\r\n                const maxCnt = 20;\r\n                this.svgHeight = margin * maxCnt ;\r\n\r\n\r\n                nodes.forEach((d) => {\r\n                    // 把group为1的结点固定在最上面\r\n          /*          if (d.group === 1) {\r\n                        d.fy=margin*cnt;//固定y坐标在最上面\r\n                        // 计算均匀分布的x坐标\r\n                        const group1Nodes = nodes.filter(node => node.group === 1);\r\n                        d.fx = 0.5*this.svgWidth+(group1Nodes.indexOf(d) -group1Nodes.length/2)*spacing;\r\n                        }\r\n                    // 把group为2的结点固定在第2行\r\n                    if (d.group === 2) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第2行\r\n                        // 计算均匀分布的x坐标\r\n                        const group2Nodes = nodes.filter(node => node.group === 2);\r\n                        d.fx = 0.5*this.svgWidth+(group2Nodes.indexOf(d) -group2Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为3的结点设定在第3列\r\n                    if (d.group === 3) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第3行\r\n                        // 计算均匀分布的x坐标\r\n                        const group3Nodes = nodes.filter(node => node.group === 3);\r\n                        d.fx = 0.5*this.svgWidth+(group3Nodes.indexOf(d) -group3Nodes.length/2)*spacing*1.1;\r\n                    }\r\n                    // 把group为4的结点设定在第4行\r\n                    if (d.group === 4) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第4行\r\n                        // 计算均匀分布的x坐标\r\n                        const group4Nodes = nodes.filter(node => node.group === 4);\r\n                        d.fx = 0.5*this.svgWidth+(group4Nodes.indexOf(d) -group4Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为5的结点设定在第5行\r\n                    if (d.group === 5) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第5行\r\n                        // 计算均匀分布的x坐标\r\n                        const group5Nodes = nodes.filter(node => node.group === 5);\r\n                        d.fx = 0.5*this.svgWidth+(group5Nodes.indexOf(d) -group5Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为6的结点设定在第6行\r\n                    if (d.group === 6) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第6行\r\n                        // 计算均匀分布的x坐标\r\n                        const group6Nodes = nodes.filter(node => node.group === 6);\r\n                        d.fx = 0.5*this.svgWidth+(group6Nodes.indexOf(d) -group6Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为7的结点设定在第7行\r\n                    if (d.group === 7) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第7行\r\n                        // 计算均匀分布的x坐标\r\n                        const group7Nodes = nodes.filter(node => node.group === 7);\r\n                        d.fx = 0.5*this.svgWidth+(group7Nodes.indexOf(d) -group7Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为8的结点设定在第8行\r\n                    if (d.group === 8) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第8行\r\n                        // 计算均匀分布的x坐标\r\n                        const group8Nodes = nodes.filter(node => node.group === 8);\r\n                        d.fx = 0.5*this.svgWidth+(group8Nodes.indexOf(d) -group8Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为9的结点设定在第9行\r\n                    if (d.group === 9) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第9行\r\n                        // 计算均匀分布的x坐标\r\n                        const group9Nodes = nodes.filter(node => node.group === 9);\r\n                        d.fx = 0.5*this.svgWidth+(group9Nodes.indexOf(d) -group9Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为10的结点设定在第10行\r\n                    if (d.group === 10) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第10行\r\n                        // 计算均匀分布的x坐标\r\n                        const group10Nodes = nodes.filter(node => node.group === 10);\r\n                        d.fx = 0.5*this.svgWidth+(group10Nodes.indexOf(d) -group10Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为11的结点设定在第11行\r\n                    if (d.group === 11) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第11行\r\n                        // 计算均匀分布的x坐标\r\n                        const group11Nodes = nodes.filter(node => node.group === 11);\r\n                        if(group11Nodes.indexOf(d)===1)\r\n                            d.fx = 0.5*this.svgWidth+(group11Nodes.indexOf(d) -group11Nodes.length/2)*spacing*0.4;\r\n                        else\r\n                            d.fx = 0.5*this.svgWidth+(group11Nodes.indexOf(d) -group11Nodes.length/2)*spacing*1.6;\r\n                    }\r\n                    */\r\n                        d.fy=margin*(cnt+0.45*(d.group-1));//固定y坐标在第d.group行\r\n                        // 计算均匀分布的x坐标\r\n                        const groupNodes = nodes.filter(node => node.group === d.group);\r\n                        d.fx = 0.5*this.svgWidth+(groupNodes.indexOf(d) -groupNodes.length/2)*spacing*1.1;\r\n                \r\n                });\r\n\r\n                // console.log(nodes)\r\n\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                // 创建svg线段元素，并设置他们的格式\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", \"#999\")\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n\r\n\r\n                // 在线段组中添加文本\r\n                link.append(\"text\")\r\n                    .attr('class', 'text-link')\r\n                    .attr('x', d => 0.5 * (d.x1 + d.x2))\r\n                    .attr('y', d => 0.5 * (d.y1 + d.y2))\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-style', 'italic')\r\n                    .text(d => d.linkName); // 设置文本内容\r\n\r\n\r\n                console.log(link)\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\"); // 为每个节点数据创建一个'g'元素\r\n\r\n                // 在节点组中添加圆形\r\n                node.append(\"circle\")\r\n                    .attr(\"r\", this.nodeRadius)\r\n                    // .attr(\"fill\", d => color(d.group))\r\n                    .attr(\"fill\", d => this.assignFillColor(d))\r\n                    .attr(\"stroke\", d => this.assignStrokeColor(d))\r\n                    .attr(\"stroke-width\", 1.5);\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '12px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n                \r\n                \r\n                // 给所有节点的下方都再添加第2个文本\r\n                node.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                    .attr('class', 'text-bottom')\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-weight', 'bold')\r\n                    .text(d => d.name);\r\n\r\n\r\n                // node.each(function (d) {\r\n                //     // 给属于group1的节点组中根据条件添加第2个文本，位于圆形的左侧\r\n                //     if (d.group === 1) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"end\") // 文本靠右侧对齐\r\n                //             .attr('class', 'text-left')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                //     // 给属于group2的节点组中根据条件添加第2个文本，位于圆形的右侧\r\n                //     if (d.group === 2) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"start\") // 文本靠右侧对齐\r\n                //             .attr('class', 'text-right')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                //     // 给属于不属于group1/2的节点组中根据条件添加第2个文本，位于圆形的下方\r\n                //     if (d.group !== 1 && d.group !== 2) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                //             .attr('class', 'text-bottom')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                // });\r\n\r\n                // console.log(node);\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n            }\r\n\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const node = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n\r\n            link.forEach(lk => {\r\n                lk.setAttribute('x1', lk.__data__.source.x);\r\n                lk.setAttribute('y1', lk.__data__.source.y);\r\n                lk.setAttribute('x2', lk.__data__.target.x);\r\n                lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            node.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 5);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n        //    /* if (d.group === 1 || d.group === 2 || d.group === 3 || d.group === 4 || d.group === 5 || d.group === 6 || d.group === 7)*/ if (d.group !== 15){\r\n        //         event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n        //     } else {\r\n        //         event.subject.fx = event.x;\r\n        //         event.subject.fy = event.y;\r\n        //     }\r\n        if (d.group !== 50){\r\n                event.subject.fx = event.x; // 只更新 x，保持 y 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n          /*  if (d.group !== 1 && d.group !== 2 && d.group !== 3 && d.group !== 4 && d.group !== 5 && d.group !== 6 && d.group !== 7)*/\r\n            // if (d.group === 15) {\r\n            //     event.subject.fx = null;\r\n            // }\r\n            // event.subject.fy = null;\r\n            if (d.group === 50) {\r\n                event.subject.fy = null;\r\n            }\r\n            event.subject.fx = null;\r\n        },\r\n\r\n        assignFillColor(d) {\r\n           return d.color\r\n        },assignStrokeColor(d) {\r\n            if (d.color === \"white\")\r\n                return \"white\"\r\n        else\r\n                return \"black\"\r\n        },\r\n        assignTextColor(d) {\r\n            if (d.group === 50 ) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        }\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>","import { render } from \"./DSLevel.vue?vue&type=template&id=4c78712e\"\nimport script from \"./DSLevel.vue?vue&type=script&lang=js\"\nexport * from \"./DSLevel.vue?vue&type=script&lang=js\"\n\nimport \"./DSLevel.vue?vue&type=style&index=0&id=4c78712e&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'visComponent',\r\n    data() {\r\n        return {\r\n            graphData: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 2000,\r\n            nodeRadius: 16,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await fetch(\"./assets/ms.json\"); // 使用实际的JSON文件路径\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            this.graphData = await response.json();\r\n            this.renderChart();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.graphData) {\r\n                console.log(\"data ok!\")\r\n                const margin = 120;\r\n                const links = this.graphData.links.map(d => ({ ...d }));\r\n                const nodes = this.graphData.nodes.map(d => ({ ...d }));\r\n                const spacing = 120;\r\n                const cnt=0.2;\r\n                const maxCnt = 30;\r\n                this.svgHeight = margin * maxCnt ;\r\n\r\n\r\n                nodes.forEach((d) => {\r\n                        d.fy=margin*(cnt+0.45*(d.group-1));//固定y坐标在第d.group行\r\n                        // 计算均匀分布的x坐标\r\n                        const groupNodes = nodes.filter(node => node.group === d.group);\r\n                        d.fx = 0.5*this.svgWidth+(groupNodes.indexOf(d) -groupNodes.length/2)*spacing*1.1;\r\n                \r\n                });\r\n\r\n                // console.log(nodes)\r\n\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                // 创建svg线段元素，并设置他们的格式\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", d => this.assignlinkColor(d))\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n\r\n\r\n                // 在线段组中添加文本\r\n                link.append(\"text\")\r\n                    .attr('class', 'text-link')\r\n                    .attr('x', d => 0.5 * (d.x1 + d.x2))\r\n                    .attr('y', d => 0.5 * (d.y1 + d.y2))\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-style', 'italic')\r\n                    .text(d => d.linkName); // 设置文本内容\r\n\r\n\r\n                console.log(link)\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\"); // 为每个节点数据创建一个'g'元素\r\n\r\n                // 在节点组中添加圆形\r\n                node.append(\"circle\")\r\n                    .attr(\"r\", this.nodeRadius)\r\n                    // .attr(\"fill\", d => color(d.group))\r\n                    .attr(\"fill\", d => this.assignFillColor(d))\r\n                    .attr(\"stroke\", d => this.assignStrokeColor(d))\r\n                    .attr(\"stroke-width\", 1.5);\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '12px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n                \r\n                \r\n                // 给所有节点的下方都再添加第2个文本\r\n                node.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                    .attr('class', 'text-bottom')\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-weight', 'bold')\r\n                    .text(d => d.name);\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n            }\r\n\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const node = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n\r\n            link.forEach(lk => {\r\n                lk.setAttribute('x1', lk.__data__.source.x);\r\n                lk.setAttribute('y1', lk.__data__.source.y);\r\n                lk.setAttribute('x2', lk.__data__.target.x);\r\n                lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            node.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 5);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n        //    /* if (d.group === 1 || d.group === 2 || d.group === 3 || d.group === 4 || d.group === 5 || d.group === 6 || d.group === 7)*/ if (d.group !== 15){\r\n        //         event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n        //     } else {\r\n        //         event.subject.fx = event.x;\r\n        //         event.subject.fy = event.y;\r\n        //     }\r\n        if (d.group !== 50){\r\n                event.subject.fx = event.x; // 只更新 x，保持 y 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n          /*  if (d.group !== 1 && d.group !== 2 && d.group !== 3 && d.group !== 4 && d.group !== 5 && d.group !== 6 && d.group !== 7)*/\r\n            // if (d.group === 15) {\r\n            //     event.subject.fx = null;\r\n            // }\r\n            // event.subject.fy = null;\r\n            if (d.group === 50) {\r\n                event.subject.fy = null;\r\n            }\r\n            event.subject.fx = null;\r\n        },\r\n\r\n        assignFillColor(d) {\r\n           return d.color\r\n        },assignStrokeColor(d) {\r\n            if (d.color === \"white\")\r\n                return \"white\"\r\n        else\r\n                return \"black\"\r\n        },\r\n        assignTextColor(d) {\r\n            if (d.group === 60 ) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        },\r\n        assignlinkColor(d) {\r\n            if (d.color === \"blue\")\r\n            { return \"blue\" }\r\n            else {\r\n                if (d.color === \"silver\")\r\n                { return \"silver\" }\r\n                else\r\n                {return \"#999\"}\r\n            }\r\n        },\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>","import { render } from \"./MSLevel.vue?vue&type=template&id=152ad252\"\nimport script from \"./MSLevel.vue?vue&type=script&lang=js\"\nexport * from \"./MSLevel.vue?vue&type=script&lang=js\"\n\nimport \"./MSLevel.vue?vue&type=style&index=0&id=152ad252&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'visComponent',\r\n    data() {\r\n        return {\r\n            graphData: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 1800,\r\n            nodeRadius: 16,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await fetch(\"./assets/pp.json\"); // 使用实际的JSON文件路径\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            this.graphData = await response.json();\r\n            this.renderChart();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.graphData) {\r\n                console.log(\"data ok!\")\r\n                const margin = 120;\r\n                const links = this.graphData.links.map(d => ({ ...d }));\r\n                const nodes = this.graphData.nodes.map(d => ({ ...d }));\r\n                const spacing = 120;\r\n                const cnt=0.2;\r\n                //计算页面高度\r\n                // const maxCnt = Math.max(nodes.filter(node => node.group === 1).length, nodes.filter(node => node.group === 2).length)\r\n                const maxCnt = 20;\r\n                this.svgHeight = margin * maxCnt ;\r\n\r\n\r\n                nodes.forEach((d) => {\r\n                    // 把group为1的结点固定在最上面\r\n          /*          if (d.group === 1) {\r\n                        d.fy=margin*cnt;//固定y坐标在最上面\r\n                        // 计算均匀分布的x坐标\r\n                        const group1Nodes = nodes.filter(node => node.group === 1);\r\n                        d.fx = 0.5*this.svgWidth+(group1Nodes.indexOf(d) -group1Nodes.length/2)*spacing;\r\n                        }\r\n                    // 把group为2的结点固定在第2行\r\n                    if (d.group === 2) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第2行\r\n                        // 计算均匀分布的x坐标\r\n                        const group2Nodes = nodes.filter(node => node.group === 2);\r\n                        d.fx = 0.5*this.svgWidth+(group2Nodes.indexOf(d) -group2Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为3的结点设定在第3列\r\n                    if (d.group === 3) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第3行\r\n                        // 计算均匀分布的x坐标\r\n                        const group3Nodes = nodes.filter(node => node.group === 3);\r\n                        d.fx = 0.5*this.svgWidth+(group3Nodes.indexOf(d) -group3Nodes.length/2)*spacing*1.1;\r\n                    }\r\n                    // 把group为4的结点设定在第4行\r\n                    if (d.group === 4) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第4行\r\n                        // 计算均匀分布的x坐标\r\n                        const group4Nodes = nodes.filter(node => node.group === 4);\r\n                        d.fx = 0.5*this.svgWidth+(group4Nodes.indexOf(d) -group4Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为5的结点设定在第5行\r\n                    if (d.group === 5) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第5行\r\n                        // 计算均匀分布的x坐标\r\n                        const group5Nodes = nodes.filter(node => node.group === 5);\r\n                        d.fx = 0.5*this.svgWidth+(group5Nodes.indexOf(d) -group5Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为6的结点设定在第6行\r\n                    if (d.group === 6) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第6行\r\n                        // 计算均匀分布的x坐标\r\n                        const group6Nodes = nodes.filter(node => node.group === 6);\r\n                        d.fx = 0.5*this.svgWidth+(group6Nodes.indexOf(d) -group6Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为7的结点设定在第7行\r\n                    if (d.group === 7) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第7行\r\n                        // 计算均匀分布的x坐标\r\n                        const group7Nodes = nodes.filter(node => node.group === 7);\r\n                        d.fx = 0.5*this.svgWidth+(group7Nodes.indexOf(d) -group7Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为8的结点设定在第8行\r\n                    if (d.group === 8) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第8行\r\n                        // 计算均匀分布的x坐标\r\n                        const group8Nodes = nodes.filter(node => node.group === 8);\r\n                        d.fx = 0.5*this.svgWidth+(group8Nodes.indexOf(d) -group8Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为9的结点设定在第9行\r\n                    if (d.group === 9) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第9行\r\n                        // 计算均匀分布的x坐标\r\n                        const group9Nodes = nodes.filter(node => node.group === 9);\r\n                        d.fx = 0.5*this.svgWidth+(group9Nodes.indexOf(d) -group9Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为10的结点设定在第10行\r\n                    if (d.group === 10) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第10行\r\n                        // 计算均匀分布的x坐标\r\n                        const group10Nodes = nodes.filter(node => node.group === 10);\r\n                        d.fx = 0.5*this.svgWidth+(group10Nodes.indexOf(d) -group10Nodes.length/2)*spacing;\r\n                    }\r\n                    // 把group为11的结点设定在第11行\r\n                    if (d.group === 11) {\r\n                        d.fy=margin*(cnt+0.5*(d.group-1));//固定y坐标在第11行\r\n                        // 计算均匀分布的x坐标\r\n                        const group11Nodes = nodes.filter(node => node.group === 11);\r\n                        if(group11Nodes.indexOf(d)===1)\r\n                            d.fx = 0.5*this.svgWidth+(group11Nodes.indexOf(d) -group11Nodes.length/2)*spacing*0.4;\r\n                        else\r\n                            d.fx = 0.5*this.svgWidth+(group11Nodes.indexOf(d) -group11Nodes.length/2)*spacing*1.6;\r\n                    }\r\n                    */\r\n                        d.fy=margin*(cnt+0.45*(d.group-1));//固定y坐标在第d.group行\r\n                        // 计算均匀分布的x坐标\r\n                        const groupNodes = nodes.filter(node => node.group === d.group);\r\n                    d.fx = 0.5 * this.svgWidth + (groupNodes.indexOf(d) - groupNodes.length / 2) * spacing * 1.1;\r\n            \r\n                \r\n                });\r\n\r\n                // console.log(nodes)\r\n\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                // 创建svg线段元素，并设置他们的格式\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", \"#999\")\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n\r\n\r\n                // 在线段组中添加文本\r\n                link.append(\"text\")\r\n                    .attr('class', 'text-link')\r\n                    .attr('x', d => 0.5 * (d.x1 + d.x2))\r\n                    .attr('y', d => 0.5 * (d.y1 + d.y2))\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-style', 'italic')\r\n                    .text(d => d.linkName); // 设置文本内容\r\n\r\n\r\n                console.log(link)\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\"); // 为每个节点数据创建一个'g'元素\r\n\r\n                // 在节点组中添加圆形\r\n                node.append(\"circle\")\r\n                    .attr(\"r\", this.nodeRadius)\r\n                    // .attr(\"fill\", d => color(d.group))\r\n                    .attr(\"fill\", d => this.assignFillColor(d))\r\n                    .attr(\"stroke\", d => this.assignStrokeColor(d))\r\n                    .attr(\"stroke-width\", 1.5);\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '12px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n                \r\n                \r\n                // 给所有节点的下方都再添加第2个文本\r\n                node.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                    .attr('class', 'text-bottom')\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-weight', 'bold')\r\n                    .text(d => d.name);\r\n\r\n\r\n                // node.each(function (d) {\r\n                //     // 给属于group1的节点组中根据条件添加第2个文本，位于圆形的左侧\r\n                //     if (d.group === 1) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"end\") // 文本靠右侧对齐\r\n                //             .attr('class', 'text-left')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                //     // 给属于group2的节点组中根据条件添加第2个文本，位于圆形的右侧\r\n                //     if (d.group === 2) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"start\") // 文本靠右侧对齐\r\n                //             .attr('class', 'text-right')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                //     // 给属于不属于group1/2的节点组中根据条件添加第2个文本，位于圆形的下方\r\n                //     if (d.group !== 1 && d.group !== 2) {\r\n                //         d3.select(this).append(\"text\")\r\n                //             .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                //             .attr('class', 'text-bottom')\r\n                //             .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                //             .style('font-size', '10px') // 设置字体大小\r\n                //             .style('fill', \"black\") // 设置字体颜色\r\n                //             .style('font-family', 'Times New Roman') // 设置字体\r\n                //             .style('font-weight', 'bold')\r\n                //             .text(d => d.name); // 设置文本内容\r\n                //     }\r\n                // });\r\n\r\n                // console.log(node);\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n            }\r\n\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const node = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n\r\n            link.forEach(lk => {\r\n                lk.setAttribute('x1', lk.__data__.source.x);\r\n                lk.setAttribute('y1', lk.__data__.source.y);\r\n                lk.setAttribute('x2', lk.__data__.target.x);\r\n                lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            node.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 5);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n        //    /* if (d.group === 1 || d.group === 2 || d.group === 3 || d.group === 4 || d.group === 5 || d.group === 6 || d.group === 7)*/ if (d.group !== 15){\r\n        //         event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n        //     } else {\r\n        //         event.subject.fx = event.x;\r\n        //         event.subject.fy = event.y;\r\n        //     }\r\n        if (d.group !== 50){\r\n                event.subject.fx = event.x; // 只更新 x，保持 y 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n          /*  if (d.group !== 1 && d.group !== 2 && d.group !== 3 && d.group !== 4 && d.group !== 5 && d.group !== 6 && d.group !== 7)*/\r\n            // if (d.group === 15) {\r\n            //     event.subject.fx = null;\r\n            // }\r\n            // event.subject.fy = null;\r\n            if (d.group === 50) {\r\n                event.subject.fy = null;\r\n            }\r\n            event.subject.fx = null;\r\n        },\r\n\r\n        assignFillColor(d) {\r\n           return d.color\r\n        },assignStrokeColor(d) {\r\n            if (d.color === \"white\")\r\n                return \"white\"\r\n        else\r\n                return \"black\"\r\n        },\r\n        assignTextColor(d) {\r\n            if (d.group === 50 ) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        }\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>","import { render } from \"./PPLevel.vue?vue&type=template&id=47dd803d\"\nimport script from \"./PPLevel.vue?vue&type=script&lang=js\"\nexport * from \"./PPLevel.vue?vue&type=script&lang=js\"\n\nimport \"./PPLevel.vue?vue&type=style&index=0&id=47dd803d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'visComponent',\r\n    data() {\r\n        return {\r\n            graphData: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 1800,\r\n            nodeRadius: 16,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await fetch(\"./assets/ss.json\"); // 使用实际的JSON文件路径\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            this.graphData = await response.json();\r\n            this.renderChart();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.graphData) {\r\n                console.log(\"data ok!\")\r\n                const margin = 120;\r\n                const links = this.graphData.links.map(d => ({ ...d }));\r\n                const nodes = this.graphData.nodes.map(d => ({ ...d }));\r\n                const spacing = 120;\r\n                const cnt=0.2;\r\n                const maxCnt = 20;\r\n                this.svgHeight = margin * maxCnt ;\r\n\r\n\r\n                nodes.forEach((d) => {\r\n                        d.fy=margin*(cnt+0.45*(d.group-1));//固定y坐标在第d.group行\r\n                        // 计算均匀分布的x坐标\r\n                        const groupNodes = nodes.filter(node => node.group === d.group);\r\n                        d.fx = 0.5*this.svgWidth+(groupNodes.indexOf(d) -groupNodes.length/2)*spacing*1.1;\r\n                \r\n                });\r\n\r\n                // console.log(nodes)\r\n\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                // 创建svg线段元素，并设置他们的格式\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", d => this.assignlinkColor(d))\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n\r\n\r\n                // 在线段组中添加文本\r\n                link.append(\"text\")\r\n                    .attr('class', 'text-link')\r\n                    .attr('x', d => 0.5 * (d.x1 + d.x2))\r\n                    .attr('y', d => 0.5 * (d.y1 + d.y2))\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-style', 'italic')\r\n                    .text(d => d.linkName); // 设置文本内容\r\n\r\n\r\n                console.log(link)\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\"); // 为每个节点数据创建一个'g'元素\r\n\r\n                // 在节点组中添加圆形\r\n                node.append(\"circle\")\r\n                    .attr(\"r\", this.nodeRadius)\r\n                    // .attr(\"fill\", d => color(d.group))\r\n                    .attr(\"fill\", d => this.assignFillColor(d))\r\n                    .attr(\"stroke\", d => this.assignStrokeColor(d))\r\n                    .attr(\"stroke-width\", 1.5);\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '12px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n                \r\n                \r\n                // 给所有节点的下方都再添加第2个文本\r\n                node.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                    .attr('class', 'text-bottom')\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-weight', 'bold')\r\n                    .text(d => d.name);\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n            }\r\n\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const node = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n\r\n            link.forEach(lk => {\r\n                lk.setAttribute('x1', lk.__data__.source.x);\r\n                lk.setAttribute('y1', lk.__data__.source.y);\r\n                lk.setAttribute('x2', lk.__data__.target.x);\r\n                lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            node.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 5);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n        //    /* if (d.group === 1 || d.group === 2 || d.group === 3 || d.group === 4 || d.group === 5 || d.group === 6 || d.group === 7)*/ if (d.group !== 15){\r\n        //         event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n        //     } else {\r\n        //         event.subject.fx = event.x;\r\n        //         event.subject.fy = event.y;\r\n        //     }\r\n        if (d.group !== 50){\r\n                event.subject.fx = event.x; // 只更新 x，保持 y 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n          /*  if (d.group !== 1 && d.group !== 2 && d.group !== 3 && d.group !== 4 && d.group !== 5 && d.group !== 6 && d.group !== 7)*/\r\n            // if (d.group === 15) {\r\n            //     event.subject.fx = null;\r\n            // }\r\n            // event.subject.fy = null;\r\n            if (d.group === 50) {\r\n                event.subject.fy = null;\r\n            }\r\n            event.subject.fx = null;\r\n        },\r\n\r\n        assignFillColor(d) {\r\n           return d.color\r\n        },assignStrokeColor(d) {\r\n            if (d.color === \"white\")\r\n                return \"white\"\r\n        else\r\n                return \"black\"\r\n        },\r\n        assignTextColor(d) {\r\n            if (d.group === 50 ) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        },\r\n        assignlinkColor(d) {\r\n           return d.color \r\n        },\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>","import { render } from \"./SSLevel.vue?vue&type=template&id=123648e6\"\nimport script from \"./SSLevel.vue?vue&type=script&lang=js\"\nexport * from \"./SSLevel.vue?vue&type=script&lang=js\"\n\nimport \"./SSLevel.vue?vue&type=style&index=0&id=123648e6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"chartContainer\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3';\r\nexport default {\r\n    name: 'visComponent',\r\n    data() {\r\n        return {\r\n            graphData: null,\r\n            simulation: null,\r\n            svgWidth: 1400,\r\n            svgHeight: 2000,\r\n            nodeRadius: 16,\r\n        };\r\n    },\r\n    async mounted() {\r\n        try {\r\n            const response = await fetch(\"./assets/dsms.json\"); // 使用实际的JSON文件路径\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            this.graphData = await response.json();\r\n            this.renderChart();\r\n        } catch (error) {\r\n            console.error(\"Failed to fetch graph data: \", error);\r\n        }\r\n    },\r\n    methods: {\r\n        renderChart() {\r\n            if (this.graphData) {\r\n                console.log(\"data ok!\")\r\n                const margin = 120;\r\n                const links = this.graphData.links.map(d => ({ ...d }));\r\n                const nodes = this.graphData.nodes.map(d => ({ ...d }));\r\n                const spacing = 120;\r\n                const cnt=0.2;\r\n                const maxCnt = 30;\r\n                this.svgHeight = margin * maxCnt ;\r\n\r\n\r\n                nodes.forEach((d) => {\r\n                        d.fy=margin*(cnt+0.45*(d.group-1));//固定y坐标在第d.group行\r\n                        // 计算均匀分布的x坐标\r\n                        const groupNodes = nodes.filter(node => node.group === d.group);\r\n                        d.fx = 0.5*this.svgWidth+(groupNodes.indexOf(d) -groupNodes.length/2)*spacing*1.1;\r\n                \r\n                });\r\n\r\n                // console.log(nodes)\r\n\r\n                // 定义了一个力学模拟，在每个tick步骤的时候运行ticked函数\r\n                this.simulation = d3.forceSimulation(nodes)\r\n                    // 这里用distance属性使连线变长\r\n                    .force(\"link\", d3.forceLink(links).id(d => d.id).distance(50))\r\n                    .force(\"charge\", d3.forceManyBody())\r\n                    .force(\"collide\", d3.forceCollide(this.nodeRadius))\r\n                    // .force(\"center\", d3.forceCenter(this.svgWidth / 2, this.svgHeight / 2))\r\n                    // .force(\"boundingBox\", this.boundingBoxForce())\r\n                    .on(\"tick\", this.ticked);\r\n\r\n                const svg = d3.select(this.$refs.chartContainer) //选择文档中的chartContainer元素\r\n                    .append('svg') //添加一个svg元素\r\n                    .attr(\"width\", this.svgWidth)\r\n                    .attr(\"height\", this.svgHeight)\r\n                    .attr(\"viewBox\", [0, 0, this.svgWidth, this.svgHeight])\r\n                    .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n\r\n                // 创建svg线段元素，并设置他们的格式\r\n                const link = svg.append(\"g\")//g表示group，一个容器元素，用于将很多svg元素组合到一起\r\n                    .selectAll('g')\r\n                    .data(links)//绑定links数组\r\n                    .join('g');\r\n\r\n                // 在线段组中添加线段\r\n                link.append(\"line\")\r\n                    .attr(\"stroke\", d => this.assignlinkColor(d))\r\n                    .attr(\"stroke-opacity\", 0.6)\r\n                    .attr(\"stroke-width\", d => Math.sqrt(d.value));\r\n\r\n\r\n                // 在线段组中添加文本\r\n                link.append(\"text\")\r\n                    .attr('class', 'text-link')\r\n                    .attr('x', d => 0.5 * (d.x1 + d.x2))\r\n                    .attr('y', d => 0.5 * (d.y1 + d.y2))\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-style', 'italic')\r\n                    .text(d => d.linkName); // 设置文本内容\r\n\r\n\r\n                console.log(link)\r\n                // 创建一个节点组来包含圆和文本\r\n                const node = svg.append(\"g\")\r\n                    .attr(\"class\", \"nodes\") // 给组添加一个类，以便我们可以引用它\r\n                    .selectAll(\"g\")\r\n                    .data(nodes)\r\n                    .join(\"g\"); // 为每个节点数据创建一个'g'元素\r\n\r\n                // 在节点组中添加圆形\r\n                node.append(\"circle\")\r\n                    .attr(\"r\", this.nodeRadius)\r\n                    // .attr(\"fill\", d => color(d.group))\r\n                    .attr(\"fill\", d => this.assignFillColor(d))\r\n                    .attr(\"stroke\", d => this.assignStrokeColor(d))\r\n                    .attr(\"stroke-width\", 1.5);\r\n\r\n                // 在节点组中添加文本\r\n                node.append(\"text\")\r\n                    .attr('class', 'text-inner')\r\n                    .attr('x', d => d.x)\r\n                    .attr('y', d => d.y)\r\n                    .attr(\"text-anchor\", \"middle\") // 水平居中\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '12px') // 设置字体大小\r\n                    .style('fill', d => this.assignTextColor(d))\r\n                    .text(d => d.title); // 将节点数据的id设置为文本内容\r\n                \r\n                \r\n                // 给所有节点的下方都再添加第2个文本\r\n                node.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\") // 文本靠中间对齐\r\n                    .attr('class', 'text-bottom')\r\n                    .attr(\"dominant-baseline\", \"central\") // 垂直居中\r\n                    .style('font-size', '10px') // 设置字体大小\r\n                    .style('fill', \"black\") // 设置字体颜色\r\n                    .style('font-family', 'Times New Roman') // 设置字体\r\n                    .style('font-weight', 'bold')\r\n                    .text(d => d.name);\r\n\r\n                // 添加拖拽行为，包含开始、进行和结束时的行为\r\n                node.call(d3.drag()\r\n                    .on(\"start\", this.dragstarted)\r\n                    .on(\"drag\", this.dragged)\r\n                    .on(\"end\", this.dragended));\r\n            }\r\n\r\n        },\r\n        ticked() {\r\n            const link = this.$refs.chartContainer.querySelectorAll('line');\r\n            const node = this.$refs.chartContainer.querySelectorAll('circle');\r\n            const textInner = this.$refs.chartContainer.querySelectorAll('.text-inner');\r\n            const textLeft = this.$refs.chartContainer.querySelectorAll('.text-left');\r\n            const textRight = this.$refs.chartContainer.querySelectorAll('.text-right');\r\n            const textBottom = this.$refs.chartContainer.querySelectorAll('.text-bottom');\r\n            const textLink = this.$refs.chartContainer.querySelectorAll('.text-link');\r\n\r\n            link.forEach(lk => {\r\n                lk.setAttribute('x1', lk.__data__.source.x);\r\n                lk.setAttribute('y1', lk.__data__.source.y);\r\n                lk.setAttribute('x2', lk.__data__.target.x);\r\n                lk.setAttribute('y2', lk.__data__.target.y);\r\n            });\r\n\r\n            node.forEach(nd => {\r\n                nd.setAttribute('cx', nd.__data__.x);\r\n                nd.setAttribute('cy', nd.__data__.y);\r\n            });\r\n\r\n            textInner.forEach(td => {\r\n                td.setAttribute('x', td.__data__.x);\r\n                td.setAttribute('y', td.__data__.y);\r\n            });\r\n\r\n            textLeft.forEach(tld => {\r\n                tld.setAttribute('x', tld.__data__.x - this.nodeRadius - 5);\r\n                tld.setAttribute('y', tld.__data__.y);\r\n            });\r\n            textRight.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x + this.nodeRadius + 20);\r\n                trd.setAttribute('y', trd.__data__.y);\r\n            });\r\n            textBottom.forEach(trd => {\r\n                trd.setAttribute('x', trd.__data__.x);\r\n                trd.setAttribute('y', trd.__data__.y + this.nodeRadius + 10);\r\n            });\r\n            textLink.forEach(tl => {\r\n                tl.setAttribute('x', 0.5 * (tl.__data__.source.x + tl.__data__.target.x));\r\n                tl.setAttribute('y', 0.5 * (tl.__data__.source.y + tl.__data__.target.y));\r\n            });\r\n\r\n        },\r\n\r\n        dragstarted(event) {\r\n            if (!event.active) this.simulation.alphaTarget(0.3).restart();\r\n            event.subject.fx = event.subject.x;\r\n            event.subject.fy = event.subject.y;\r\n        },\r\n\r\n        dragged(event, d) {\r\n        //    /* if (d.group === 1 || d.group === 2 || d.group === 3 || d.group === 4 || d.group === 5 || d.group === 6 || d.group === 7)*/ if (d.group !== 15){\r\n        //         event.subject.fy = event.y; // 只更新 y，保持 x 固定\r\n        //     } else {\r\n        //         event.subject.fx = event.x;\r\n        //         event.subject.fy = event.y;\r\n        //     }\r\n        if (d.group !== 50){\r\n                event.subject.fx = event.x; // 只更新 x，保持 y 固定\r\n            } else {\r\n                event.subject.fx = event.x;\r\n                event.subject.fy = event.y;\r\n            }\r\n\r\n\r\n        },\r\n\r\n        dragended(event, d) {\r\n            if (!event.active) this.simulation.alphaTarget(0);\r\n          /*  if (d.group !== 1 && d.group !== 2 && d.group !== 3 && d.group !== 4 && d.group !== 5 && d.group !== 6 && d.group !== 7)*/\r\n            // if (d.group === 15) {\r\n            //     event.subject.fx = null;\r\n            // }\r\n            // event.subject.fy = null;\r\n            if (d.group === 50) {\r\n                event.subject.fy = null;\r\n            }\r\n            event.subject.fx = null;\r\n        },\r\n\r\n        assignFillColor(d) {\r\n           return d.color\r\n        },assignStrokeColor(d) {\r\n            if (d.color === \"white\")\r\n                return \"white\"\r\n        else\r\n                return \"black\"\r\n        },\r\n        assignTextColor(d) {\r\n            if (d.group === 80 ) {\r\n                return \"white\"\r\n            }\r\n            else {\r\n                return \"black\"\r\n            }\r\n        },\r\n        assignlinkColor(d) {\r\n            if (d.color === \"blue\")\r\n            { return \"blue\" }\r\n            else {\r\n                if (d.color === \"silver\")\r\n                { return \"silver\" }\r\n                else\r\n                {return \"#999\"}\r\n            }\r\n        },\r\n    },\r\n\r\n    beforeUnmount() {\r\n        // 停止模拟\r\n        if (this.simulation) {\r\n            this.simulation.stop();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    /* 或者使用 fixed 根据需求 */\r\n    top: 20;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n</style>","import { render } from \"./DSMS.vue?vue&type=template&id=43592068\"\nimport script from \"./DSMS.vue?vue&type=script&lang=js\"\nexport * from \"./DSMS.vue?vue&type=script&lang=js\"\n\nimport \"./DSMS.vue?vue&type=style&index=0&id=43592068&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\n// import HomeView from '../views/HomeView.vue'\r\n// import TopLevel from '../components/TopLevel.vue';\r\n// import FBLevel from '../components/FBLevel.vue';\r\n// import FB1Level from '../components/FB1Level.vue';\r\n// import FB2Level from '../components/FB2Level.vue';\r\n\r\nimport DSLevel from '../components/DSLevel';\r\nimport MSLevel from '../components/MSLevel';\r\nimport PPLevel from '../components/PPLevel';\r\nimport SSLevel from '../components/SSLevel';\r\nimport DSMS from '../components/DSMS';\r\n// const routes = [\r\n//     { path: '/global-level', component: TopLevel },\r\n//     { path: '/local-level', component: FBLevel },\r\n//     { path: '/process1-level', component: FB1Level },\r\n//     { path: '/process2-level', component: FB2Level },\r\n// ];\r\n\r\nconst routes = [\r\n    { path: '/Distributing Station', component: DSLevel },\r\n    { path: '/Measuring Station', component: MSLevel },\r\n    { path: '/Pick-and-Place Station', component: PPLevel },\r\n    { path: '/Sorting Station', component: SSLevel },\r\n    { path: '/DSMS', component: DSMS },\r\n];\r\n// const routes = [\r\n//     {\r\n//         path: '/',\r\n//         name: 'home',\r\n//         component: HomeView\r\n//     },\r\n//     {\r\n//         path: '/about',\r\n//         name: 'about',\r\n//         // route level code-splitting\r\n//         // this generates a separate chunk (about.[hash].js) for this route\r\n//         // which is lazy-loaded when the route is visited.\r\n//         component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\r\n//     }\r\n// ]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(process.env.BASE_URL),\r\n    routes\r\n})\r\n\r\nexport default router\r\n","import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n  },\r\n  getters: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\ncreateApp(App).use(store).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvisualization\"] = self[\"webpackChunkvisualization\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7794); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createVNode","_component_router_link","to","_component_router_view","script","__exports__","render","ref","_createElementBlock","_hoisted_1","name","data","graphData","simulation","svgWidth","svgHeight","nodeRadius","mounted","response","fetch","ok","Error","this","json","renderChart","error","console","methods","log","margin","links","map","d","nodes","spacing","cnt","maxCnt","forEach","fy","group","groupNodes","filter","node","fx","indexOf","length","d3","force","id","distance","on","ticked","svg","$refs","chartContainer","append","attr","link","selectAll","join","Math","sqrt","value","x1","x2","y1","y2","style","text","linkName","assignFillColor","assignStrokeColor","x","y","assignTextColor","title","call","dragstarted","dragged","dragended","querySelectorAll","textInner","textLeft","textRight","textBottom","textLink","lk","setAttribute","__data__","source","target","nd","td","tld","trd","tl","event","active","alphaTarget","restart","subject","color","beforeUnmount","stop","assignlinkColor","routes","path","component","DSLevel","MSLevel","PPLevel","SSLevel","DSMS","router","createRouter","history","createWebHistory","process","createStore","state","getters","mutations","actions","modules","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}